const db = require('./config/database');

(async () => {
  try {
    console.log('üîÑ Seeding assets data...\n');
    
    // Get any user ID
    const admin = await db.query('SELECT id FROM users ORDER BY id LIMIT 1');
    const adminId = admin[0]?.id || 1;
    
    // Get categories
    const categories = await db.query('SELECT id, name FROM asset_categories ORDER BY id');
    console.log('üì¶ Available categories:');
    categories.forEach(cat => console.log(`  - ${cat.name} (ID: ${cat.id})`));
    
    // Get some staff members
    const staff = await db.query('SELECT id FROM staff LIMIT 5');
    console.log(`\nüë• Found ${staff.length} staff members for assignment\n`);
    
    // Sample assets data
    const assets = [
      // Computers
      {
        asset_code: 'IT-LAP-001',
        name: 'Laptop Dell Latitude 5420',
        category_id: categories.find(c => c.name.includes('M√°y t√≠nh'))?.id || 1,
        description: 'Laptop c√¥ng t√°c cho gi·∫£ng vi√™n, Core i5-11th Gen, 16GB RAM, 512GB SSD',
        serial_number: 'DL5420-2024-001',
        brand: 'Dell',
        model: 'Latitude 5420',
        purchase_date: '2024-01-15',
        purchase_price: 25000000,
        current_value: 23000000,
        warranty_expiry: '2027-01-15',
        location: 'Ph√≤ng gi·∫£ng vi√™n P301',
        assigned_to: staff[0]?.id || null,
        status: 'in_use',
        condition_rating: 'excellent',
        notes: 'M√°y m·ªõi, hi·ªáu nƒÉng t·ªët',
        created_by: adminId
      },
      {
        asset_code: 'IT-LAP-002',
        name: 'Laptop HP ProBook 450 G9',
        category_id: categories.find(c => c.name.includes('M√°y t√≠nh'))?.id || 1,
        description: 'Laptop d·ª± ph√≤ng cho c√¥ng t√°c, Core i7, 16GB RAM, 512GB SSD',
        serial_number: 'HP450G9-2024-002',
        brand: 'HP',
        model: 'ProBook 450 G9',
        purchase_date: '2024-02-20',
        purchase_price: 28000000,
        current_value: 26500000,
        warranty_expiry: '2027-02-20',
        location: 'Kho thi·∫øt b·ªã IT',
        assigned_to: null,
        status: 'available',
        condition_rating: 'excellent',
        notes: 'S·∫µn s√†ng c·∫•p ph√°t',
        created_by: adminId
      },
      {
        asset_code: 'IT-PC-001',
        name: 'M√°y t√≠nh ƒë·ªÉ b√†n Dell OptiPlex 7090',
        category_id: categories.find(c => c.name.includes('M√°y t√≠nh'))?.id || 1,
        description: 'PC cho ph√≤ng h√†nh ch√≠nh, Core i5-11th, 8GB RAM, 256GB SSD',
        serial_number: 'DELL7090-2023-001',
        brand: 'Dell',
        model: 'OptiPlex 7090',
        purchase_date: '2023-09-10',
        purchase_price: 18000000,
        current_value: 15000000,
        warranty_expiry: '2026-09-10',
        location: 'Ph√≤ng h√†nh ch√≠nh P201',
        assigned_to: staff[1]?.id || null,
        status: 'in_use',
        condition_rating: 'good',
        notes: 'Ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh',
        created_by: adminId
      },
      
      // Office furniture
      {
        asset_code: 'FUR-DSK-001',
        name: 'B√†n l√†m vi·ªác IKEA BEKANT',
        category_id: categories.find(c => c.name.includes('N·ªôi th·∫•t'))?.id || 2,
        description: 'B√†n l√†m vi·ªác ƒëi·ªÅu ch·ªânh chi·ªÅu cao, 160x80cm, m√†u tr·∫Øng',
        serial_number: 'BEKANT-160-001',
        brand: 'IKEA',
        model: 'BEKANT 160x80',
        purchase_date: '2023-06-01',
        purchase_price: 5000000,
        current_value: 4500000,
        warranty_expiry: '2026-06-01',
        location: 'Ph√≤ng gi·∫£ng vi√™n P302',
        assigned_to: staff[2]?.id || null,
        status: 'in_use',
        condition_rating: 'good',
        notes: 'T√¨nh tr·∫°ng t·ªët',
        created_by: adminId
      },
      {
        asset_code: 'FUR-CHR-001',
        name: 'Gh·∫ø vƒÉn ph√≤ng Herman Miller Aeron',
        category_id: categories.find(c => c.name.includes('N·ªôi th·∫•t'))?.id || 2,
        description: 'Gh·∫ø ergonomic cao c·∫•p, ƒë·ªám l∆∞·ªõi tho√°ng kh√≠',
        serial_number: 'HM-AERON-2023-001',
        brand: 'Herman Miller',
        model: 'Aeron Size B',
        purchase_date: '2023-06-01',
        purchase_price: 12000000,
        current_value: 11000000,
        warranty_expiry: '2035-06-01',
        location: 'Ph√≤ng gi·∫£ng vi√™n P302',
        assigned_to: staff[2]?.id || null,
        status: 'in_use',
        condition_rating: 'excellent',
        notes: 'B·∫£o h√†nh 12 nƒÉm',
        created_by: adminId
      },
      
      // Equipment
      {
        asset_code: 'EQ-PRJ-001',
        name: 'M√°y chi·∫øu Epson EB-2250U',
        category_id: categories.find(c => c.name.includes('Thi·∫øt b·ªã'))?.id || 3,
        description: 'M√°y chi·∫øu WUXGA 5000 lumens cho ph√≤ng h·ªçc',
        serial_number: 'EPSON-EB2250U-001',
        brand: 'Epson',
        model: 'EB-2250U',
        purchase_date: '2023-08-15',
        purchase_price: 35000000,
        current_value: 32000000,
        warranty_expiry: '2026-08-15',
        location: 'Ph√≤ng h·ªçc A301',
        assigned_to: null,
        status: 'in_use',
        condition_rating: 'good',
        notes: 'Thay b√≥ng ƒë√®n l·∫ßn cu·ªëi: 2024-09-01',
        created_by: adminId
      },
      {
        asset_code: 'EQ-PRJ-002',
        name: 'M√°y chi·∫øu Sony VPL-FHZ70',
        category_id: categories.find(c => c.name.includes('Thi·∫øt b·ªã'))?.id || 3,
        description: 'M√°y chi·∫øu laser WUXGA cho h·ªôi tr∆∞·ªùng',
        serial_number: 'SONY-VPLFHZ70-001',
        brand: 'Sony',
        model: 'VPL-FHZ70',
        purchase_date: '2024-03-20',
        purchase_price: 85000000,
        current_value: 82000000,
        warranty_expiry: '2027-03-20',
        location: 'Kho thi·∫øt b·ªã',
        assigned_to: null,
        status: 'maintenance',
        condition_rating: 'good',
        notes: 'ƒêang b·∫£o tr√¨ ƒë·ªãnh k·ª≥, d·ª± ki·∫øn ho√†n th√†nh 2024-10-15',
        created_by: adminId
      },
      {
        asset_code: 'EQ-PRT-001',
        name: 'M√°y in HP LaserJet Pro M404dn',
        category_id: categories.find(c => c.name.includes('Thi·∫øt b·ªã'))?.id || 3,
        description: 'M√°y in laser ƒëen tr·∫Øng t·ªëc ƒë·ªô cao',
        serial_number: 'HP-M404DN-2023-001',
        brand: 'HP',
        model: 'LaserJet Pro M404dn',
        purchase_date: '2023-05-10',
        purchase_price: 8500000,
        current_value: 7000000,
        warranty_expiry: '2026-05-10',
        location: 'Ph√≤ng h√†nh ch√≠nh P201',
        assigned_to: null,
        status: 'in_use',
        condition_rating: 'good',
        notes: 'Thay m·ª±c l·∫ßn cu·ªëi: 2024-09-20',
        created_by: adminId
      },
      
      // Vehicles
      {
        asset_code: 'VEH-CAR-001',
        name: 'Xe √¥ t√¥ Toyota Innova 2023',
        category_id: categories.find(c => c.name.includes('Ph∆∞∆°ng ti·ªán'))?.id || 4,
        description: 'Xe 7 ch·ªó ph·ª•c v·ª• c√¥ng t√°c, m√†u b·∫°c',
        serial_number: 'INNOVA-2023-VN-001',
        brand: 'Toyota',
        model: 'Innova 2.0E MT',
        purchase_date: '2023-01-20',
        purchase_price: 750000000,
        current_value: 680000000,
        warranty_expiry: '2026-01-20',
        location: 'B√£i ƒë·ªó xe khoa',
        assigned_to: null,
        status: 'in_use',
        condition_rating: 'good',
        notes: 'B·∫£o d∆∞·ª°ng ƒë·ªãnh k·ª≥ l·∫ßn cu·ªëi: 2024-09-10. Bi·ªÉn s·ªë: 30A-12345',
        created_by: adminId
      },
      {
        asset_code: 'EQ-AC-001',
        name: 'M√°y l·∫°nh Daikin FTKC35UVMV',
        category_id: categories.find(c => c.name.includes('Thi·∫øt b·ªã'))?.id || 3,
        description: 'M√°y l·∫°nh inverter 1.5HP cho ph√≤ng h·ªçp',
        serial_number: 'DAIKIN-FTKC35-2022-001',
        brand: 'Daikin',
        model: 'FTKC35UVMV',
        purchase_date: '2022-04-15',
        purchase_price: 12000000,
        current_value: 9000000,
        warranty_expiry: '2024-04-15',
        location: 'Ph√≤ng h·ªçp P401',
        assigned_to: null,
        status: 'in_use',
        condition_rating: 'fair',
        notes: 'H·∫øt b·∫£o h√†nh, c·∫ßn l√™n l·ªãch b·∫£o tr√¨',
        created_by: adminId
      },
      {
        asset_code: 'IT-LAP-003',
        name: 'Laptop Asus ZenBook 14',
        category_id: categories.find(c => c.name.includes('M√°y t√≠nh'))?.id || 1,
        description: 'Laptop c≈© ƒë√£ h·∫øt chu k·ª≥ s·ª≠ d·ª•ng',
        serial_number: 'ASUS-ZB14-2019-001',
        brand: 'Asus',
        model: 'ZenBook 14 UX434',
        purchase_date: '2019-03-10',
        purchase_price: 22000000,
        current_value: 5000000,
        warranty_expiry: '2022-03-10',
        location: 'Kho thi·∫øt b·ªã c≈©',
        assigned_to: null,
        status: 'retired',
        condition_rating: 'poor',
        notes: 'ƒê√£ qua 5 nƒÉm s·ª≠ d·ª•ng, ch·ªù thanh l√Ω',
        created_by: adminId
      }
    ];
    
    console.log('üîÑ Inserting assets...\n');
    
    let inserted = 0;
    for (const asset of assets) {
      try {
        const columns = Object.keys(asset).join(', ');
        const placeholders = Object.keys(asset).map(() => '?').join(', ');
        const values = Object.values(asset);
        
        await db.query(
          `INSERT INTO assets (${columns}) VALUES (${placeholders})`,
          values
        );
        console.log(`‚úÖ Added: ${asset.name} (${asset.asset_code})`);
        inserted++;
      } catch (err) {
        console.error(`‚ùå Failed to add ${asset.name}:`, err.message);
      }
    }
    
    console.log(`\n‚ú® Successfully inserted ${inserted}/${assets.length} assets`);
    
    // Show summary
    const stats = await db.query(`
      SELECT 
        COUNT(*) as total,
        SUM(CASE WHEN status = 'available' THEN 1 ELSE 0 END) as available,
        SUM(CASE WHEN status = 'in_use' THEN 1 ELSE 0 END) as in_use,
        SUM(CASE WHEN status = 'maintenance' THEN 1 ELSE 0 END) as maintenance,
        SUM(CASE WHEN status = 'retired' THEN 1 ELSE 0 END) as retired,
        SUM(current_value) as total_value
      FROM assets
    `);
    
    console.log('\nüìä Assets Summary:');
    console.table(stats[0]);
    
  } catch (err) {
    console.error('‚ùå Error:', err.message);
    console.error(err);
  } finally {
    await db.close();
  }
})();
