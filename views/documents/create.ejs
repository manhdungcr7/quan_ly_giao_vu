<%- contentFor('css') %>
<link rel="stylesheet" href="/css/documents.css">

<%- contentFor('content') %>
<%- include('../partials/alerts') %>
<div class="documents-page">
  <% if (typeof error !== 'undefined' && error.length > 0) { %>
    <div class="alert alert-danger">
      <%= error %>
    </div>
  <% } %>

  <% if (moduleSupportEnabled === false) { %>
    <div class="alert alert-warning">
      Hệ thống chưa thể bật chế độ phân nhóm văn bản do thiếu quyền cập nhật cơ sở dữ liệu. Mọi văn bản mới sẽ được lưu vào nhóm mặc định.
    </div>
  <% } %>

  <% const usersList = Array.isArray(users) ? users : []; %>
  <% const organizationsList = Array.isArray(organizations) ? organizations : []; %>
  <% const typesList = Array.isArray(types) ? types : []; %>
  <% const assignedSelected = usersList.find(function(u){ return String(u.id) === String(formData && formData.assigned_to || ''); }); %>
  <% const toOrgSelected = organizationsList.find(function(o){ return String(o.id) === String(formData && formData.to_org_id || ''); }); %>
  <% const fromOrgSelected = organizationsList.find(function(o){ return String(o.id) === String(formData && formData.from_org_id || ''); }); %>
  <% const typeSelected = typesList.find(function(t){ return String(t.id) === String(formData && formData.type_id || ''); }); %>
  <% const moduleList = Array.isArray(modules) ? modules : []; %>
  <% const activeModule = module || moduleList.find(function(m){ return m.key === moduleKey; }) || { key: moduleKey || 'administrative', label: 'Văn bản hành chính', icon: 'fa-briefcase', description: '' }; %>
  <% const moduleSlug = activeModule.key || 'administrative'; %>
  <% const activeModuleIcon = activeModule.icon || 'fa-folder-tree'; %>
  <% const backDirection = (formData && formData.direction) || 'incoming'; %>
  
  <% const STATUS_OPTIONS_BASE = [
    { id: 'pending', label: 'Chờ xử lý' },
    { id: 'processing', label: 'Đang xử lý' },
    { id: 'completed', label: 'Hoàn tất' },
    { id: 'approved', label: 'Đã duyệt' },
    { id: 'archived', label: 'Đã lưu trữ' },
    { id: 'overdue', label: 'Quá hạn' }
  ];
  const EXTRA_STATUS_LABELS = { draft: 'Bản nháp' };
  let STATUS_OPTIONS = STATUS_OPTIONS_BASE.slice();
  const RAW_STATUS_SELECTION = formData?.status;
  if (RAW_STATUS_SELECTION && !STATUS_OPTIONS_BASE.some(function(opt){ return opt.id === RAW_STATUS_SELECTION; }) && EXTRA_STATUS_LABELS[RAW_STATUS_SELECTION]) {
    STATUS_OPTIONS = STATUS_OPTIONS.concat([{ id: RAW_STATUS_SELECTION, label: EXTRA_STATUS_LABELS[RAW_STATUS_SELECTION] }]);
  }
  const DEFAULT_STATUS = 'pending';
  const SELECTED_STATUS = STATUS_OPTIONS.some(function(opt){ return opt.id === RAW_STATUS_SELECTION; }) ? RAW_STATUS_SELECTION : DEFAULT_STATUS;
  %>

  <div class="page-header">
    <div>
      <h1 class="page-title">Thêm văn bản mới</h1>
      <p class="page-subtitle">Tạo văn bản đến hoặc văn bản đi trong hệ thống</p>
      <div class="documents-hero__chip" id="activeModuleChip">
        <span class="documents-hero__chip-icon"><i id="moduleChipIcon" class="fas <%= activeModuleIcon %>" aria-hidden="true"></i></span>
        <span class="documents-hero__chip-label" id="moduleChipLabel"><%= activeModule.label %></span>
      </div>
    </div>
    <div class="page-actions">
      <a href="/documents/<%= moduleSlug %>/<%= backDirection %>" class="btn btn-secondary" data-module-back="true"><i class="fas fa-arrow-left"></i> Quay lại</a>
    </div>
  </div>

  <form method="post" action="/documents" class="document-form" enctype="multipart/form-data">
    <input type="hidden" name="module" id="moduleField" value="<%= moduleSlug %>">
    <% if (moduleList.length > 1) { %>
      <div class="document-module-selector" role="group" aria-label="Chọn nhóm văn bản">
        <span class="document-module-selector__label">Nhóm văn bản</span>
        <div class="module-switcher">
          <% moduleList.forEach(function(mod){ %>
            <% const isActive = mod.key === moduleSlug; %>
            <button type="button"
                    class="module-switcher__option <%= isActive ? 'module-switcher__option--active' : '' %>"
                    data-module-option="<%= mod.key %>"
                    data-module-icon="<%= mod.icon || 'fa-folder-tree' %>"
                    data-module-label="<%= mod.label %>"
                    data-module-desc="<%= mod.description || '' %>">
              <span class="module-switcher__badge"><i class="fas <%= mod.icon || 'fa-folder-tree' %>" aria-hidden="true"></i></span>
              <span class="module-switcher__info">
                <span class="module-switcher__title"><%= mod.label %></span>
                <span class="module-switcher__desc"><%= mod.description || 'Quản lý văn bản thuộc nhóm này.' %></span>
              </span>
            </button>
          <% }); %>
        </div>
      </div>
    <% } %>

    <div class="form-grid">
      <div class="form-section">
        <h3>Thông tin cơ bản</h3>
        
        <div class="form-group">
          <label for="direction" class="required">Loại văn bản</label>
          <select name="direction" id="direction" required>
            <option value="">-- Chọn loại --</option>
            <option value="incoming" <%= (formData?.direction === 'incoming') ? 'selected' : '' %>>Văn bản đến</option>
            <option value="outgoing" <%= (formData?.direction === 'outgoing') ? 'selected' : '' %>>Văn bản đi</option>
          </select>
        </div>

        <div class="form-group">
          <label for="document_number" class="required">Số hiệu văn bản</label>
          <input type="text" name="document_number" id="document_number" 
                 value="<%= formData?.document_number || '' %>" 
                 placeholder="VD: 123/QD-ĐHBK" required>
          <small>Số hiệu phải duy nhất trong hệ thống</small>
        </div>

        <div class="form-group">
          <label for="title" class="required">Tiêu đề</label>
          <input type="text" name="title" id="title" 
                 value="<%= formData?.title || '' %>" 
                 placeholder="Nhập tiêu đề văn bản" required>
        </div>

        <div class="form-group">
          <label for="type_id">Loại văn bản</label>
          <input type="hidden" name="type_id" id="type_id" value="<%= formData?.type_id || '' %>">
          <input type="hidden" name="type_label" id="type_label" value="<%= formData?.type_label || (typeSelected ? typeSelected.name : '') %>">
          <input type="text" id="type_id_display" list="typeIdOptions"
                 placeholder="Gõ để tìm loại văn bản"
                 value="<%= typeSelected ? typeSelected.name : (formData?.type_label || '') %>"
                 autocomplete="off">
          <datalist id="typeIdOptions">
            <% typesList.forEach(function(type) { %>
              <option value="<%= type.name %>" data-id="<%= type.id %>"></option>
            <% }) %>
          </datalist>
          <small>Tìm kiếm nhanh bằng cách nhập tên loại văn bản.</small>
        </div>

        <div class="form-group">
          <label for="content_summary">Trích yếu nội dung</label>
          <textarea name="content_summary" id="content_summary" rows="3" 
                    placeholder="Tóm tắt nội dung văn bản"><%= formData?.content_summary || '' %></textarea>
        </div>

        <div class="form-group">
          <label for="chi_dao">Chỉ đạo / Đề xuất tham mưu</label>
          <textarea name="chi_dao" id="chi_dao" rows="3" placeholder="Nhập ý kiến đề xuất hoặc chỉ đạo ban đầu"><%= formData?.chi_dao || '' %></textarea>
          <small>Phần này dùng để ghi chú chỉ đạo sơ bộ hoặc đề xuất tham mưu gửi lãnh đạo.</small>
        </div>
      </div>

      <div class="form-section">
        <h3>Thông tin xử lý</h3>

        <div class="form-group">
          <label for="issue_date">Ngày ban hành</label>
          <input type="date" name="issue_date" id="issue_date" 
                 value="<%= formData?.issue_date || '' %>">
        </div>

        <div class="form-group">
          <label for="received_date">Ngày nhận</label>
          <input type="date" name="received_date" id="received_date" 
                 value="<%= formData?.received_date || '' %>">
        </div>

        <div class="form-group">
          <label for="processing_deadline">Hạn xử lý</label>
          <input type="date" name="processing_deadline" id="processing_deadline" 
                 value="<%= formData?.processing_deadline || '' %>">
        </div>

        <div class="form-group">
          <label for="priority">Độ ưu tiên</label>
          <input type="hidden" name="priority" id="priority" value="<%= formData?.priority || 'medium' %>">
          <input type="text" id="priority_display" list="priorityOptions"
                 placeholder="Chọn độ ưu tiên"
                 value="<%= formData?.priority === 'low' ? 'Thấp' : formData?.priority === 'high' ? 'Cao' : formData?.priority === 'urgent' ? 'Khẩn cấp' : 'Bình thường' %>"
                 autocomplete="off">
          <datalist id="priorityOptions">
            <option value="Thấp" data-id="low"></option>
            <option value="Bình thường" data-id="medium"></option>
            <option value="Cao" data-id="high"></option>
            <option value="Khẩn cấp" data-id="urgent"></option>
          </datalist>
          <small>Nhập để chọn mức độ ưu tiên xử lý văn bản.</small>
        </div>
        
        <div class="form-group">
          <label for="status_select">Trạng thái</label>
          <select name="status" id="status_select">
            <% STATUS_OPTIONS.forEach(function(option){ %>
              <option value="<%= option.id %>" <%= SELECTED_STATUS === option.id ? 'selected' : '' %>><%= option.label %></option>
            <% }); %>
          </select>
          <small>Trạng thái hiện tại của văn bản trong quy trình xử lý.</small>
        </div>

        <div class="form-group">
          <label for="assigned_to_display">Người xử lý</label>
     <input type="hidden" name="assigned_to" id="assigned_to" value="<%= formData?.assigned_to || '' %>">
     <input type="hidden" name="assigned_to_label" id="assigned_to_label" value="<%= formData?.assigned_to_label || (assignedSelected ? assignedSelected.full_name : '') %>">
          <input type="text" id="assigned_to_display" list="assignedToOptions"
                 placeholder="Gõ để tìm nhanh người xử lý"
       value="<%= assignedSelected ? assignedSelected.full_name : (formData?.assigned_to_label || '') %>"
                 autocomplete="off">
          <datalist id="assignedToOptions">
            <% usersList.forEach(function(user) { %>
              <option value="<%= user.full_name %>" data-id="<%= user.id %>"></option>
            <% }) %>
          </datalist>
          <small>Nhập vài ký tự để lọc nhanh danh sách nhân sự.</small>
        </div>
      </div>

      <div class="form-section">
        <h3>Cơ quan liên quan</h3>

        <div class="form-group" id="from_org_group">
          <label for="from_org_id">Cơ quan gửi</label>
     <input type="hidden" name="from_org_id" id="from_org_id" value="<%= formData?.from_org_id || '' %>">
     <input type="hidden" name="from_org_label" id="from_org_label" value="<%= formData?.from_org_label || (fromOrgSelected ? fromOrgSelected.name : '') %>">
          <input type="text" id="from_org_display" list="fromOrgOptions"
                 placeholder="Gõ để tìm cơ quan gửi"
       value="<%= fromOrgSelected ? fromOrgSelected.name : (formData?.from_org_label || '') %>"
                 autocomplete="off">
          <datalist id="fromOrgOptions">
            <% organizationsList.forEach(function(org) { %>
              <option value="<%= org.name %>" data-id="<%= org.id %>"></option>
            <% }) %>
          </datalist>
          <small>Tìm kiếm nhanh bằng cách nhập tên cơ quan.</small>
        </div>

        <div class="form-group" id="to_org_group">
          <label for="to_org_display">Cơ quan nhận</label>
     <input type="hidden" name="to_org_id" id="to_org_id" value="<%= formData?.to_org_id || '' %>">
     <input type="hidden" name="to_org_label" id="to_org_label" value="<%= formData?.to_org_label || (toOrgSelected ? toOrgSelected.name : '') %>">
          <input type="text" id="to_org_display" list="toOrgOptions"
                 placeholder="Gõ để tìm cơ quan nhận"
       value="<%= toOrgSelected ? toOrgSelected.name : (formData?.to_org_label || '') %>"
                 autocomplete="off">
          <datalist id="toOrgOptions">
            <% organizationsList.forEach(function(org) { %>
              <option value="<%= org.name %>" data-id="<%= org.id %>"></option>
            <% }) %>
          </datalist>
          <small>Tìm kiếm nhanh bằng cách nhập tên cơ quan.</small>
        </div>

        <div class="form-group">
          <label for="attachments">File đính kèm</label>
          <input type="file" name="attachments" id="attachments" multiple 
                 accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.jpg,.png">
          <small>Chấp nhận: PDF, Word, Excel, ảnh. Tối đa 10MB mỗi file.</small>
        </div>
      </div>
    </div>

    <div class="form-actions">
      <button type="submit" class="btn btn-primary">
        <i class="fas fa-save"></i> Lưu văn bản
      </button>
      <a href="/documents/<%= moduleSlug %>/<%= backDirection %>" class="btn btn-secondary" data-module-back="true">
        <i class="fas fa-times"></i> Hủy bỏ
      </a>
    </div>
  </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  var moduleField = document.getElementById('moduleField');
  var moduleButtons = document.querySelectorAll('[data-module-option]');
  var moduleChipLabel = document.getElementById('moduleChipLabel');
  var moduleChipIcon = document.getElementById('moduleChipIcon');
  var moduleBackLinks = document.querySelectorAll('[data-module-back]');
  var defaultModule = <%- JSON.stringify(moduleSlug) %>;
  var defaultDirection = <%- JSON.stringify(backDirection) %>;
  var directionEl;

  function bindDatalist(inputId, hiddenId, datalistId, labelHiddenId) {
    var input = document.getElementById(inputId);
    var hidden = document.getElementById(hiddenId);
    var datalist = document.getElementById(datalistId);
    var labelHidden = labelHiddenId ? document.getElementById(labelHiddenId) : null;
    if (!input || !hidden || !datalist) {
      return;
    }
    function syncHidden() {
      var value = input.value.trim();
      var matchedOption = null;
      for (var i = 0; i < datalist.options.length; i++) {
        if (datalist.options[i].value === value) {
          matchedOption = datalist.options[i];
          break;
        }
      }

      if (labelHidden) {
        labelHidden.value = value;
      }

      if (matchedOption) {
        hidden.value = matchedOption.dataset.id || matchedOption.value;
      } else {
        hidden.value = '';
      }
    }

    input.addEventListener('change', syncHidden);
    input.addEventListener('blur', syncHidden);
    input.addEventListener('input', function() {
      var currentValue = input.value.trim();
      if (labelHidden) {
        labelHidden.value = currentValue;
      }
      if (!currentValue) {
        hidden.value = '';
      }
    });

    syncHidden();
  }

  // Bind all datalist fields
  bindDatalist('type_id_display', 'type_id', 'typeIdOptions', 'type_label');
  bindDatalist('priority_display', 'priority', 'priorityOptions');
  bindDatalist('assigned_to_display', 'assigned_to', 'assignedToOptions', 'assigned_to_label');
  bindDatalist('from_org_display', 'from_org_id', 'fromOrgOptions', 'from_org_label');
  bindDatalist('to_org_display', 'to_org_id', 'toOrgOptions', 'to_org_label');

  directionEl = document.getElementById('direction');
  var fromOrgGroup = document.getElementById('from_org_group');
  var toOrgGroup = document.getElementById('to_org_group');
  var fromOrgInput = document.getElementById('from_org_display');
  var toOrgInput = document.getElementById('to_org_display');

  function getCurrentDirection() {
    if (directionEl && directionEl.value) {
      return directionEl.value;
    }
    return defaultDirection || 'incoming';
  }

  function refreshBackLinks(forcedModule) {
    var moduleValue = forcedModule || (moduleField && moduleField.value) || defaultModule || 'administrative';
    var directionValue = getCurrentDirection();
    moduleBackLinks.forEach(function(link) {
      if (!link) {
        return;
      }
      link.setAttribute('href', '/documents/' + moduleValue + '/' + directionValue);
    });
  }

  if (moduleButtons && moduleButtons.length && moduleField) {
    moduleButtons.forEach(function(button) {
      button.addEventListener('click', function() {
        var moduleValue = button.getAttribute('data-module-option');
        if (!moduleValue) {
          return;
        }
        moduleField.value = moduleValue;
        moduleButtons.forEach(function(btn) {
          btn.classList.remove('module-switcher__option--active');
        });
        button.classList.add('module-switcher__option--active');
        if (moduleChipLabel) {
          moduleChipLabel.textContent = button.getAttribute('data-module-label') || moduleValue;
        }
        if (moduleChipIcon) {
          moduleChipIcon.className = 'fas ' + (button.getAttribute('data-module-icon') || 'fa-folder-tree');
        }
        refreshBackLinks(moduleValue);
      });
    });
  }

  function toggleOrgFields() {
    if (!directionEl) {
      return;
    }

    var direction = directionEl.value;

    if (direction === 'incoming') {
      if (fromOrgGroup) fromOrgGroup.style.display = 'block';
      if (toOrgGroup) toOrgGroup.style.display = 'none';
      if (fromOrgInput) fromOrgInput.required = true;
      if (toOrgInput) {
        toOrgInput.required = false;
        toOrgInput.value = '';
      }
      var toOrgHidden = document.getElementById('to_org_id');
      if (toOrgHidden) {
        toOrgHidden.value = '';
      }
    } else if (direction === 'outgoing') {
      if (fromOrgGroup) fromOrgGroup.style.display = 'none';
      if (toOrgGroup) toOrgGroup.style.display = 'block';
      if (fromOrgInput) {
        fromOrgInput.required = false;
        fromOrgInput.value = '';
      }
      var fromOrgHidden = document.getElementById('from_org_id');
      if (fromOrgHidden) {
        fromOrgHidden.value = '';
      }
      if (toOrgInput) toOrgInput.required = true;
    } else {
      if (fromOrgGroup) fromOrgGroup.style.display = 'block';
      if (toOrgGroup) toOrgGroup.style.display = 'block';
      if (fromOrgInput) fromOrgInput.required = false;
      if (toOrgInput) toOrgInput.required = false;
    }
  }

  if (directionEl) {
    directionEl.addEventListener('change', function() {
      toggleOrgFields();
      refreshBackLinks();
    });
    toggleOrgFields();
  }

  refreshBackLinks();
});
</script>