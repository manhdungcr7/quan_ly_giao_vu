<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - <%= appName || 'Quản lý Giáo vụ' %></title>
        <link href="/css/app.css" rel="stylesheet">
        <link href="/assets/css/style.css" rel="stylesheet">
        <link href="/css/layout.css" rel="stylesheet">
        <link href="/css/examination-enhanced.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>

        <style>
        .form-page {
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        .page-header {
            display: flex;
            flex-wrap: wrap;
            align-items: flex-start;
            justify-content: space-between;
            gap: 16px;
            padding-bottom: 16px;
            border-bottom: 1px solid #e5e7eb;
        }

        .page-title {
            font-size: 26px;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .page-title i {
            color: #6f42c1;
            font-size: 28px;
        }

        .page-subtitle {
            margin: 6px 0 0 0;
            color: #6b7280;
            font-size: 0.95rem;
        }

        .page-breadcrumbs {
            display: inline-flex;
            flex-wrap: wrap;
            gap: 8px;
            font-size: 0.85rem;
            color: #6b7280;
        }

        .page-breadcrumbs a {
            color: #6f42c1;
            text-decoration: none;
        }

        .page-actions {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .page-actions .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 14px;
            border-radius: 8px;
            border: 1px solid transparent;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
        }

        .btn-outline-secondary {
            color: #4b5563;
            border-color: #d1d5db;
            background: white;
        }

        .btn-outline-secondary:hover {
            border-color: #6f42c1;
            color: #6f42c1;
        }

        .btn-primary {
            background: #6f42c1;
            color: #ffffff;
            border-color: #6f42c1;
        }

        .btn-primary:hover {
            background: #5a2da5;
        }

        .section-grid {
            display: grid;
            grid-template-columns: minmax(0, 1fr) 320px;
            gap: 24px;
        }

        .section-main {
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        .section-card {
            background: #ffffff;
            border-radius: 16px;
            border: 1px solid #ebe7f3;
            box-shadow: 0 12px 30px rgba(111, 66, 193, 0.08);
            padding: 24px;
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        .section-card section {
            display: flex;
            flex-direction: column;
            gap: 18px;
        }

        .section-card section + section {
            border-top: 1px solid #f0f0f5;
            padding-top: 24px;
            margin-top: 8px;
        }

        .section-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 12px;
            border-bottom: 1px solid #f0f0f5;
            padding-bottom: 12px;
        }

        .section-header h2 {
            font-size: 1.1rem;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-header h2 i {
            color: #6f42c1;
        }

        .section-subtitle {
            font-size: 0.85rem;
            color: #6b7280;
            margin: 0;
        }

        .section-body {
            display: flex;
            flex-direction: column;
            gap: 18px;
        }

        .form-grid {
            display: grid;
            gap: 18px;
        }

        .form-grid--2 {
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        }

        .form-field {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .form-field--full {
            grid-column: 1 / -1;
        }

        .form-field label {
            font-weight: 600;
            color: #374151;
            font-size: 0.92rem;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

        .form-field label .required {
            color: #ef4444;
        }

        .form-control,
        .form-select,
        textarea.form-control {
            border-radius: 10px;
            border: 1px solid #d1d5db;
            padding: 10px 14px;
            font-size: 0.95rem;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-control:focus,
        .form-select:focus,
        textarea.form-control:focus {
            border-color: #6f42c1;
            box-shadow: 0 0 0 0.2rem rgba(111, 66, 193, 0.15);
            outline: none;
        }

        .hint {
            font-size: 0.8rem;
            color: #6b7280;
        }

        .sidebar-card {
            background: #ffffff;
            border-radius: 16px;
            border: 1px solid #ebe7f3;
            box-shadow: 0 12px 30px rgba(15, 23, 42, 0.08);
            padding: 22px;
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .section-sidebar {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .sidebar-card h3 {
            font-size: 1rem;
            font-weight: 700;
            color: #1f2937;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .sidebar-steps {
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .sidebar-steps li {
            display: flex;
            gap: 10px;
            align-items: flex-start;
            color: #4b5563;
            font-size: 0.9rem;
        }

        .sidebar-steps li span {
            width: 26px;
            height: 26px;
            border-radius: 50%;
            background: #f4edf9;
            color: #6f42c1;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            font-size: 0.8rem;
            flex-shrink: 0;
        }

        .sidebar-meta {
            display: flex;
            flex-direction: column;
            gap: 10px;
            font-size: 0.88rem;
            color: #374151;
        }

        .sidebar-meta span {
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .badge-status {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 10px;
            border-radius: 20px;
            background: #eef2ff;
            color: #4338ca;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 12px;
            margin-top: 8px;
        }

        .btn-secondary {
            background: #e5e7eb;
            color: #374151;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            padding: 10px 18px;
            font-weight: 600;
        }

        .btn-secondary:hover {
            background: #d1d5db;
        }

        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }

        body.exam-page--full {
            background: var(--layout-bg);
        }

        .exam-full-wrapper {
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: stretch;
        }

        .exam-full-inner {
            flex: 1;
            max-width: 1260px;
            padding: 36px 48px 52px;
        }

        @media (max-width: 992px) {
            .exam-full-inner {
                padding: 24px;
            }
        }

        @media (max-width: 1200px) {
            .section-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .page-header {
                flex-direction: column;
                align-items: flex-start;
            }

            .page-actions {
                width: 100%;
                justify-content: flex-start;
            }

            .form-actions {
                flex-direction: column-reverse;
                align-items: stretch;
            }

            .form-actions .btn {
                width: 100%;
                justify-content: center;
            }
        }
        </style>
</head>
<body class="app-auth exam-page--full">
    <div class="exam-full-wrapper">
        <div class="exam-full-inner">
            <%- include('../partials/alerts') %>

                <% const isEdit = !!session; %>
                <%
                  const statusMap = {
                    scheduled: { label: 'Đã lên lịch', icon: 'fa-calendar-check' },
                    in_progress: { label: 'Đang thi', icon: 'fa-wave-square' },
                    completed: { label: 'Hoàn thành', icon: 'fa-circle-check' },
                    cancelled: { label: 'Tạm hoãn', icon: 'fa-triangle-exclamation' },
                    offline: { label: 'Ngoại tuyến', icon: 'fa-plug-circle-xmark' },
                    pending: { label: 'Đang cập nhật', icon: 'fa-ellipsis' }
                  };
                  const currentStatus = session ? (statusMap[session.status] || statusMap.pending) : statusMap.scheduled;
                  const examDateValue = session && session.exam_date ? new Date(session.exam_date) : null;
                  const examTimeValue = session && session.exam_time ? session.exam_time.substring(0, 5) : null;
                  const gradingDeadlineValue = session && session.grading_deadline ? new Date(session.grading_deadline) : null;
                                      const selectedClass = session ? (classes || []).find(cls => cls.id == session.class_id) : null;
                                      const classDisplayValue = selectedClass
                                          ? `${selectedClass.code} - ${selectedClass.name}`
                                          : (session ? [session.class_code, session.class_name].filter(Boolean).join(' - ') : '');
                                      const selectedSubject = session ? (subjects || []).find(subject => subject.id == session.subject_id) : null;
                                    const subjectDisplayValue = selectedSubject
                                        ? `${selectedSubject.code} - ${selectedSubject.name}`
                                        : (session ? (session.subject_name || '') : '');
                                    const selectedGrader1 = session ? (graders || []).find(grader => grader.id == session.grader_id) : null;
                                    const grader1DisplayValue = selectedGrader1
                                        ? `${selectedGrader1.full_name} (${selectedGrader1.email})`
                                        : (session ? (session.grader_name || session.grader_manual_name || '') : '');
                                    const selectedGrader2 = session ? (graders || []).find(grader => grader.id == session.grader2_id) : null;
                                    const grader2DisplayValue = selectedGrader2
                                        ? `${selectedGrader2.full_name} (${selectedGrader2.email})`
                                        : (session ? (session.grader2_name || session.grader2_manual_name || '') : '');
                %>

                <div class="form-page">
                    <div>
                        <div class="page-breadcrumbs">
                            <a href="/">Trang chủ</a>
                            <span>/</span>
                            <a href="/examination">Công tác khảo thí</a>
                            <span>/</span>
                            <span><%= isEdit ? 'Chỉnh sửa ca thi' : 'Tạo ca thi mới' %></span>
                        </div>
                        <div class="page-header">
                            <div>
                                <h1 class="page-title">
                                    <i class="fas fa-clipboard-check"></i>
                                    <%= title %>
                                </h1>
                                <p class="page-subtitle">
                                    <%= isEdit ? 'Cập nhật thông tin ca thi và phân công chấm thi' : 'Thiết lập nhanh lịch thi, phân công cán bộ và hạn chấm bài' %>
                                </p>
                            </div>
                            <div class="page-actions">
                                <a href="/examination" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left"></i>
                                    Quay lại danh sách
                                </a>
                                <button type="submit" form="examForm" class="btn btn-primary">
                                    <i class="fas fa-save"></i>
                                    <%= isEdit ? 'Lưu thay đổi' : 'Lưu ca thi' %>
                                </button>
                            </div>
                        </div>
                    </div>

                    <% if (typeof error !== 'undefined' && error && error.length > 0) { %>
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <%= error %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    <% } %>

                    <% if (typeof success !== 'undefined' && success && success.length > 0) { %>
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <%= success %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    <% } %>

                    <div class="section-grid">
                        <div class="section-main">
                            <form id="examForm" class="section-card" method="POST" action="<%= session ? `/examination/${session.id}` : '/examination' %>">
                                <% if (session) { %>
                                    <input type="hidden" name="_method" value="PUT">
                                <% } %>

                                <section>
                                    <div class="section-header">
                                        <h2><i class="fas fa-info-circle"></i> Thông tin cơ bản</h2>
                                        <p class="section-subtitle">Xác định mã ca thi, môn học và kỳ thi tương ứng</p>
                                    </div>
                                    <div class="section-body">
                                        <div class="form-grid form-grid--2">
                                            <div class="form-field">
                                                <label for="exam_code">Mã ca thi <span class="required">*</span></label>
                                                <input type="text" class="form-control" id="exam_code" name="exam_code" value="<%= session ? session.exam_code : '' %>" required>
                                            </div>

                                            <div class="form-field form-field--full">
                                                <label for="exam_name">Làm đề <span class="required">*</span></label>
                                                <input type="text" class="form-control" id="exam_name" name="exam_name" value="<%= session ? session.exam_name : '' %>" placeholder="Nhập tên ca thi hoặc giảng viên ra đề" required>
                                            </div>

                                            <div class="form-field">
                                                <label for="period_name">Kỳ thi <span class="required">*</span></label>
                                                <input type="text" class="form-control" id="period_name" name="period_name" list="periodsList" value="<%= session ? (session.period_name || '') : '' %>" placeholder="Nhập hoặc chọn kỳ thi" required>
                                                <datalist id="periodsList">
                                                    <% (periods || []).forEach(period => { %>
                                                        <option value="<%= period.name %>" data-id="<%= period.id %>"></option>
                                                    <% }) %>
                                                </datalist>
                                                <input type="hidden" name="period_id" id="period_id" value="<%= session ? (session.period_id || '') : '' %>">
                                            </div>

                                            <div class="form-field">
                                                <label for="subject_name">Môn học <span class="required">*</span></label>
                                                <input type="text" class="form-control" id="subject_name" name="subject_name" list="subjectsList" value="<%= subjectDisplayValue %>" placeholder="Nhập hoặc chọn môn học" required>
                                                <datalist id="subjectsList">
                                                    <% (subjects || []).forEach(subject => { %>
                                                        <option value="<%= subject.code %> - <%= subject.name %>" data-id="<%= subject.id %>" data-credits="<%= typeof subject.credits !== 'undefined' && subject.credits !== null ? subject.credits : '' %>"></option>
                                                    <% }) %>
                                                </datalist>
                                                <input type="hidden" name="subject_id" id="subject_id" value="<%= session ? (session.subject_id || '') : '' %>">
                                            </div>

                                            <div class="form-field">
                                                <label for="subject_credits">Tín chỉ</label>
                                                <input type="number" class="form-control" id="subject_credits" name="subject_credits" min="0" max="10" step="1" value="<%= session && typeof session.subject_credits !== 'undefined' && session.subject_credits !== null ? session.subject_credits : (selectedSubject && selectedSubject.credits ? selectedSubject.credits : '') %>" placeholder="Ví dụ: 3">
                                            </div>

                                            <div class="form-field form-field--full">
                                                <label for="class_name">Lớp học</label>
                                                <input type="text" class="form-control" id="class_name" name="class_name" list="classesList" value="<%= classDisplayValue %>" placeholder="Nhập hoặc chọn lớp (nếu có)">
                                                <datalist id="classesList">
                                                    <% (classes || []).forEach(cls => { %>
                                                        <option value="<%= cls.code %> - <%= cls.name %>" data-id="<%= cls.id %>"></option>
                                                    <% }) %>
                                                </datalist>
                                                <input type="hidden" name="class_id" id="class_id" value="<%= session ? (session.class_id || '') : '' %>">
                                            </div>
                                        </div>
                                    </div>
                                </section>

                                <section>
                                    <div class="section-header">
                                        <h2><i class="fas fa-calendar-day"></i> Lịch thi & cơ sở vật chất</h2>
                                        <p class="section-subtitle">Sắp xếp thời gian, phòng thi và số lượng sinh viên</p>
                                    </div>
                                    <div class="section-body">
                                        <div class="form-grid form-grid--2">
                                            <div class="form-field">
                                                <label for="exam_date">Ngày thi <span class="required">*</span></label>
                                                <input type="date" class="form-control" id="exam_date" name="exam_date" value="<%= session && session.exam_date ? new Date(session.exam_date).toISOString().split('T')[0] : '' %>" required>
                                            </div>

                                            <div class="form-field">
                                                <label for="exam_time">Giờ thi <span class="required">*</span></label>
                                                <input type="time" class="form-control" id="exam_time" name="exam_time" value="<%= session && session.exam_time ? session.exam_time.substring(0,5) : '' %>" required>
                                            </div>

                                            <div class="form-field">
                                                <label for="duration">Thời lượng (phút)</label>
                                                <input type="number" class="form-control" id="duration" name="duration" value="<%= session && session.duration !== null && session.duration !== undefined ? session.duration : 90 %>" min="30" max="240" step="15">
                                            </div>

                                            <div class="form-field">
                                                <label for="student_count">Số lượng SV</label>
                                                <input type="number" class="form-control" id="student_count" name="student_count" value="<%= session && session.student_count !== null && session.student_count !== undefined ? session.student_count : 0 %>" min="0">
                                            </div>

                                            <div class="form-field">
                                                <label for="room">Phòng thi</label>
                                                <input type="text" class="form-control" id="room" name="room" value="<%= session ? session.room || '' : '' %>">
                                            </div>

                                            <div class="form-field">
                                                <label for="building">Tòa nhà</label>
                                                <input type="text" class="form-control" id="building" name="building" value="<%= session ? session.building || '' : '' %>">
                                            </div>

                                            <div class="form-field">
                                                <label for="exam_type">Hình thức thi</label>
                                                <select class="form-select" id="exam_type" name="exam_type">
                                                    <option value="offline" <%= !session || session.exam_type === 'offline' ? 'selected' : '' %>>Offline</option>
                                                    <option value="online" <%= session && session.exam_type === 'online' ? 'selected' : '' %>>Online</option>
                                                    <option value="hybrid" <%= session && session.exam_type === 'hybrid' ? 'selected' : '' %>>Hybrid</option>
                                                </select>
                                            </div>

                                            <div class="form-field">
                                                <label for="expected_copies">Dự kiến số bản in</label>
                                                <input type="number" class="form-control" id="expected_copies" name="expected_copies" value="<%= session && session.expected_copies !== null && session.expected_copies !== undefined ? session.expected_copies : '' %>" min="0">
                                            </div>

                                            <div class="form-field form-field--full">
                                                <label for="link">Link thi online</label>
                                                <input type="url" class="form-control" id="link" name="link" value="<%= session ? session.link || '' : '' %>" placeholder="https://...">
                                                <span class="hint">Chỉ cần thiết lập khi tổ chức thi trực tuyến</span>
                                            </div>
                                        </div>
                                    </div>
                                </section>

                                <section>
                                    <div class="section-header">
                                        <h2><i class="fas fa-user-check"></i> Phân công & theo dõi</h2>
                                        <p class="section-subtitle">Phân bổ cán bộ và cập nhật tiến độ chấm bài</p>
                                    </div>
                                    <div class="section-body">
                                        <div class="form-grid form-grid--2">
                                            <div class="form-field form-field--full">
                                                <label for="grader_name"><i class="fas fa-user-tie"></i> CBCT1</label>
                                                <input type="text" class="form-control" id="grader_name" name="grader_name" list="gradersList" value="<%= grader1DisplayValue %>" placeholder="Nhập hoặc chọn cán bộ chấm chính">
                                                <input type="hidden" name="grader_id" id="grader_id" value="<%= session ? (session.grader_id || '') : '' %>">
                                                <span class="hint">Có thể bỏ trống nếu cần phân công thủ công sau</span>
                                            </div>

                                            <div class="form-field form-field--full">
                                                <label for="grader2_name"><i class="fas fa-user-friends"></i> CBCT2</label>
                                                <input type="text" class="form-control" id="grader2_name" name="grader2_name" list="gradersList" value="<%= grader2DisplayValue %>" placeholder="Nhập hoặc chọn cán bộ chấm phụ">
                                                <input type="hidden" name="grader2_id" id="grader2_id" value="<%= session ? (session.grader2_id || '') : '' %>">
                                                <span class="hint">Tùy chọn: thêm cán bộ hỗ trợ chấm thi</span>
                                            </div>

                                            <datalist id="gradersList">
                                                <% (graders || []).forEach(grader => { %>
                                                    <option value="<%= grader.full_name %> (<%= grader.email %>)" data-id="<%= grader.id %>"></option>
                                                <% }) %>
                                            </datalist>

                                            <div class="form-field">
                                                <label for="grading_deadline"><i class="fas fa-calendar-times"></i> Hạn chấm bài</label>
                                                <input type="date" class="form-control" id="grading_deadline" name="grading_deadline" value="<%= session && session.grading_deadline ? new Date(session.grading_deadline).toISOString().split('T')[0] : '' %>">
                                            </div>

                                            <div class="form-field">
                                                <label for="status">Trạng thái</label>
                                                <select class="form-select" id="status" name="status">
                                                    <option value="scheduled" <%= !session || session.status === 'scheduled' ? 'selected' : '' %>>Đã lên lịch</option>
                                                    <option value="in_progress" <%= session && session.status === 'in_progress' ? 'selected' : '' %>>Đang thi</option>
                                                    <option value="completed" <%= session && session.status === 'completed' ? 'selected' : '' %>>Hoàn thành</option>
                                                    <option value="offline" <%= session && session.status === 'offline' ? 'selected' : '' %>>Ngoại tuyến</option>
                                                    <option value="cancelled" <%= session && session.status === 'cancelled' ? 'selected' : '' %>>Tạm hoãn</option>
                                                </select>
                                            </div>

                                            <div class="form-field form-field--full">
                                                <label for="notes">Ghi chú</label>
                                                <textarea class="form-control" id="notes" name="notes" rows="3"><%= session && session.notes ? session.notes : '' %></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </section>

                                <div class="form-actions">
                                    <a href="/examination" class="btn btn-secondary">
                                        <i class="fas fa-times"></i>
                                        Hủy
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save"></i>
                                        <%= isEdit ? 'Lưu thay đổi' : 'Tạo ca thi' %>
                                    </button>
                                </div>
                            </form>
                        </div>

                        <aside class="section-sidebar">
                            <div class="sidebar-card">
                                <h3><i class="fas fa-route"></i> Quy trình nhanh</h3>
                                <ul class="sidebar-steps">
                                    <li><span>1</span>Điền thông tin cơ bản và kỳ thi liên quan.</li>
                                    <li><span>2</span>Chốt lịch thi, số lượng sinh viên và hạ tầng.</li>
                                    <li><span>3</span>Phân công cán bộ chấm, đặt hạn chấm và lưu lại.</li>
                                </ul>
                            </div>

                            <div class="sidebar-card">
                                <h3><i class="fas fa-lightbulb"></i> Gợi ý điều phối</h3>
                                <div class="sidebar-meta">
                                    <span><i class="fas fa-people-group"></i> Ưu tiên phân công cán bộ khi số lượng SV &gt; 80.</span>
                                    <span><i class="fas fa-hourglass-half"></i> Đặt hạn chấm cách ngày thi tối đa 7 ngày để kịp báo cáo.</span>
                                    <span><i class="fas fa-link"></i> Chỉ nhập đường dẫn khi ca thi diễn ra trực tuyến.</span>
                                </div>
                            </div>

                            <% if (isEdit) { %>
                                <div class="sidebar-card">
                                    <h3><i class="fas fa-chart-line"></i> Trạng thái hiện tại</h3>
                                    <span class="badge-status"><i class="fas <%= currentStatus.icon %>"></i> <%= currentStatus.label %></span>
                                    <div class="sidebar-meta">
                                        <% if (examDateValue) { %>
                                            <span><i class="fas fa-calendar-day"></i> Ngày thi: <strong><%= examDateValue.toLocaleDateString('vi-VN') %></strong> <%= examTimeValue ? '(' + examTimeValue + ')' : '' %></span>
                                        <% } %>
                                        <% if (session && session.room) { %>
                                            <span><i class="fas fa-location-dot"></i> Phòng: <strong><%= session.room %></strong> <%= session.building ? ('- ' + session.building) : '' %></span>
                                        <% } %>
                                        <% if (gradingDeadlineValue) { %>
                                            <span><i class="fas fa-calendar-check"></i> Hạn chấm: <strong><%= gradingDeadlineValue.toLocaleDateString('vi-VN') %></strong></span>
                                        <% } %>
                                    </div>
                                </div>
                            <% } %>
                        </aside>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <script src="/js/app.js"></script>
    <script src="/js/examination-enhanced.js"></script>
        <script>
        (function() {
            function setupComboField({ inputId, hiddenId, datalistId, onMatch, onClear }) {
                const inputEl = document.getElementById(inputId);
                if (!inputEl) return;

                const hiddenEl = hiddenId ? document.getElementById(hiddenId) : null;
                const datalistEl = datalistId ? document.getElementById(datalistId) : null;

                const findOption = (value) => {
                    if (!datalistEl || !value) return null;
                    return Array.from(datalistEl.options).find((option) => option.value === value) || null;
                };

                const syncFromValue = () => {
                    const value = inputEl.value.trim();
                    const option = findOption(value);
                    if (hiddenEl) {
                        hiddenEl.value = option ? (option.dataset.id || '') : '';
                    }
                    if (option && typeof onMatch === 'function') {
                        onMatch(option);
                    }
                    if (!option && typeof onClear === 'function') {
                        onClear();
                    }
                };

                inputEl.addEventListener('change', syncFromValue);
                inputEl.addEventListener('blur', syncFromValue);
                inputEl.addEventListener('input', () => {
                    if (hiddenEl) hiddenEl.value = '';
                    if (typeof onClear === 'function') {
                        onClear();
                    }
                });

                syncFromValue();
            }

            setupComboField({
                inputId: 'period_name',
                hiddenId: 'period_id',
                datalistId: 'periodsList'
            });

            const subjectCreditsInput = document.getElementById('subject_credits');
            setupComboField({
                inputId: 'subject_name',
                hiddenId: 'subject_id',
                datalistId: 'subjectsList',
                onMatch(option) {
                    const credits = option.dataset.credits || '';
                    if (!subjectCreditsInput) return;
                    if (!subjectCreditsInput.value) {
                        subjectCreditsInput.value = credits;
                    }
                }
            });

            setupComboField({
                inputId: 'class_name',
                hiddenId: 'class_id',
                datalistId: 'classesList'
            });

            setupComboField({
                inputId: 'grader_name',
                hiddenId: 'grader_id',
                datalistId: 'gradersList'
            });

            setupComboField({
                inputId: 'grader2_name',
                hiddenId: 'grader2_id',
                datalistId: 'gradersList'
            });
        })();

        const examForm = document.getElementById('examForm');
    if (examForm) {
      examForm.addEventListener('submit', async function (event) {
        event.preventDefault();

        const formData = new FormData(this);
        const payload = Object.fromEntries(formData.entries());

        Object.keys(payload).forEach((key) => {
          if (payload[key] === '') payload[key] = null;
        });

        const method = payload._method || 'POST';
        delete payload._method;

        try {
          const response = await fetch(this.action, {
            method,
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });

          const result = await response.json();

          if (result.success) {
            alert('<%= isEdit ? "Cập nhật" : "Tạo" %> ca thi thành công!');
            window.location.href = '/examination';
          } else {
            alert('Lỗi: ' + result.message);
          }
        } catch (fetchError) {
          alert('Lỗi khi gửi dữ liệu');
          console.error(fetchError);
        }
      });
    }
    </script>
</body>
</html>
