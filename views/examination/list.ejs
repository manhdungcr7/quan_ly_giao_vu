<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Qu·∫£n l√Ω gi√°o v·ª•</title>
    
    <!-- Custom CSS -->
    <link href="/css/app.css" rel="stylesheet">
    <link href="/assets/css/style.css" rel="stylesheet">
    <link href="/css/layout.css" rel="stylesheet">
    <link href="/css/examination-enhanced.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
    
<style>
.page-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  padding-bottom: 16px;
  border-bottom: 2px solid #e9ecef;
}

.page-title {
  font-size: 24px;
  font-weight: 600;
  color: #2c3e50;
  margin: 0;
}

.page-title i {
  color: #6f42c1;
  margin-right: 10px;
}

.page-actions {
  display: flex;
  gap: 10px;
}

.insights-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 16px;
  margin-bottom: 24px;
}

.insight-card {
  background: #ffffff;
  border-radius: 12px;
  border: 1px solid #e6e8ec;
  padding: 18px;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.insight-card--primary {
  background: linear-gradient(120deg, #6f42c1 0%, #9265de 100%);
  border: none;
  color: #ffffff;
  box-shadow: 0 12px 24px rgba(111, 66, 193, 0.25);
}

.insight-label {
  font-size: 0.85rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  color: inherit;
  opacity: 0.8;
}

.insight-value {
  font-size: 2.2rem;
  font-weight: 700;
  color: inherit;
}

.insight-subtext {
  font-size: 0.9rem;
  color: inherit;
  opacity: 0.75;
}

.insight-delta {
  font-size: 0.85rem;
  font-weight: 600;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  color: #198754;
}

.insight-delta--warn {
  color: #d6336c;
}

.insight-highlight {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
  padding: 18px 24px;
  border: 1px solid #e6e8ec;
  border-radius: 12px;
  background: #f6f4ff;
  margin-bottom: 24px;
}

.highlight-meta {
  display: flex;
  gap: 18px;
  flex-wrap: wrap;
}

.highlight-meta span {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  font-size: 0.95rem;
  color: #3d3d3d;
}

.insight-highlight strong {
  font-size: 1.05rem;
  color: #2c3e50;
}

.filter-toolbar {
  background: #f8f9fa;
  padding: 20px;
  border-radius: 8px;
  margin-bottom: 20px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.alert-section {
  margin-bottom: 24px;
}

.alert-section__title {
  font-size: 1rem;
  font-weight: 600;
  color: #6f42c1;
  margin-bottom: 12px;
  display: flex;
  align-items: center;
  gap: 8px;
}

.alert-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 16px;
}

.alert-card {
  border: 1px solid #fde4ea;
  background: #fff5f8;
  border-radius: 12px;
  padding: 16px;
}

.alert-card--warning {
  border-color: #ffe7cc;
  background: #fff9f1;
}

.alert-card--info {
  border-color: #d9ecff;
  background: #f2f8ff;
}

.alert-card__header {
  font-weight: 600;
  margin-bottom: 10px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.alert-list {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.alert-item {
  font-size: 0.9rem;
  color: #2c3e50;
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.alert-meta {
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  font-size: 0.8rem;
  color: #6c757d;
}

.alert-meta span {
  display: inline-flex;
  align-items: center;
  gap: 4px;
}

.filter-form {
  display: flex;
  gap: 15px;
  align-items: end;
}

.filter-group {
  display: flex;
  flex-direction: column;
  min-width: 150px;
}

.filter-group.flex-grow {
  flex-grow: 1;
}

.filter-group label {
  font-size: 0.875rem;
  font-weight: 600;
  margin-bottom: 5px;
  color: #6c757d;
}

.filter-actions {
  display: flex;
  gap: 10px;
}

.card {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  border: none;
}

.card-body {
  padding: 0;
}

.table {
  margin-bottom: 0;
  width: 100%;
}

.table thead th {
  background: #f8f9fa;
  border-bottom: 2px solid #dee2e6;
  color: #495057;
  font-weight: 600;
  font-size: 0.875rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  padding: 16px;
}

.table tbody tr {
  transition: background-color 0.2s;
  border-bottom: 1px solid #f0f0f0;
}

.table tbody tr:hover {
  background-color: #f8f9fa;
}

.table td {
  padding: 12px 16px;
  vertical-align: middle;
  color: #2c3e50;
}

.status-chip {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: 999px;
  font-size: 0.85rem;
  font-weight: 600;
  letter-spacing: 0.02em;
  background: #eef2f7;
  color: #495057;
}

.status-chip i {
  font-size: 0.8rem;
}

.status-chip--scheduled {
  background: #e7f1ff;
  color: #1f6feb;
}

.status-chip--progress {
  background: #fff3cd;
  color: #b58105;
}

.status-chip--completed {
  background: #e6f4ea;
  color: #1a7f37;
}

.status-chip--offline {
  background: #f4edf9;
  color: #6f42c1;
}

.status-chip--risk {
  background: #fde4ea;
  color: #c0325c;
}

.btn-group {
  display: flex;
  gap: 5px;
}

.btn {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 8px 16px;
  border-radius: 6px;
  font-weight: 500;
  text-decoration: none;
  border: 1px solid transparent;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-primary {
  background: #6f42c1;
  color: white;
  border-color: #6f42c1;
}

.btn-primary:hover {
  background: #5a2da5;
}

.btn-secondary {
  background: #6c757d;
  color: white;
}

.btn-secondary:hover {
  background: #545b62;
}

.btn-sm {
  padding: 4px 8px;
  font-size: 0.875rem;
}

.btn-outline-primary {
  color: #6f42c1;
  border-color: #6f42c1;
  background: transparent;
}

.btn-outline-primary:hover {
  background: #6f42c1;
  color: white;
}

.btn-outline-danger {
  color: #dc3545;
  border-color: #dc3545;
  background: transparent;
}

.btn-outline-danger:hover {
  background: #dc3545;
  color: white;
}

.btn-outline-success {
  color: #28a745;
  border-color: #28a745;
  background: transparent;
}

.btn-outline-success:hover {
  background: #28a745;
  color: white;
}

.btn-link {
  color: #6f42c1;
  text-decoration: none;
}

.form-control {
  padding: 8px 12px;
  border: 1px solid #ced4da;
  border-radius: 4px;
  font-size: 0.875rem;
}

.form-control:focus {
  outline: none;
  border-color: #6f42c1;
  box-shadow: 0 0 0 0.2rem rgba(111, 66, 193, 0.15);
}

.text-center {
  text-align: center;
}

.text-muted {
  color: #6c757d;
}

.py-5 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.mb-3 {
  margin-bottom: 1rem;
}

.fa-inbox {
  opacity: 0.3;
}

@media (max-width: 768px) {
  .filter-form {
    flex-wrap: wrap;
  }
  
  .filter-group {
    flex: 1 1 calc(50% - 10px);
  }
  
  .filter-group.flex-grow {
    flex: 1 1 100%;
  }
  
  .filter-actions {
    flex: 1 1 100%;
  }

  .insight-highlight {
    padding: 16px;
  }
}

.link-cell {
  display: flex;
  gap: 8px;
  align-items: center;
}

.link-cell .badge {
  margin-left: -4px;
}

.manual-grader-text {
  color: #0d6efd;
  font-weight: 600;
}
</style>

</head>
<body class="app-auth">
    <div class="app-layout">
        <aside class="app-sidebar" id="appSidebar">
            <div class="sidebar-brand">
                <span class="sidebar-brand__logo">KA</span>
                <div class="sidebar-brand__text">
                    <span class="sidebar-brand__title">Qu·∫£n l√Ω gi√°o v·ª•</span>
                    <small class="sidebar-brand__subtitle">Khoa An ninh ƒëi·ªÅu tra</small>
                </div>
            </div>
            <%- include('../partials/sidebar') %>
        </aside>
        <div class="app-main">
            <header class="app-topbar">
                <div class="topbar-left">
                    <button class="sidebar-toggle" id="sidebarToggle">
                        <i class="fas fa-bars"></i>
                    </button>
                </div>
        <div class="topbar-right">
          <div class="topbar-user" data-user-menu>
            <button class="topbar-user__details" type="button" data-user-menu-toggle aria-haspopup="true" aria-expanded="false">
              <div class="topbar-user__meta">
                <span class="topbar-user__name"><%= (user && (user.fullName || user.full_name || user.username)) || 'Ng∆∞·ªùi d√πng' %></span>
                <span class="topbar-user__role"><%= (user && (user.roleName || user.role_name)) || 'Administrator' %></span>
              </div>
              <div class="topbar-user__avatar"><%= (user && (user.fullName || user.full_name || user.username) || '?').charAt(0).toUpperCase() %></div>
              <span class="topbar-user__chevron" aria-hidden="true">‚åÑ</span>
            </button>
            <div class="topbar-user__menu" data-user-menu-dropdown hidden>
              <a class="topbar-user__menu-item" href="<%= (user && user.id) ? ('/users/' + user.id) : '#' %>">
                <span>üë§ H·ªì s∆° c√° nh√¢n</span>
              </a>
              <a class="topbar-user__menu-item" href="/auth/change-password">
                <span>üîë ƒê·ªïi m·∫≠t kh·∫©u</span>
              </a>
              <form class="topbar-user__menu-item" method="post" action="/auth/logout">
                <button type="submit" class="topbar-user__logout">
                  <span>üö™ ƒêƒÉng xu·∫•t</span>
                </button>
              </form>
            </div>
          </div>
          <form class="topbar-logout" method="post" action="/auth/logout">
            <button type="submit" class="topbar-logout__button" title="ƒêƒÉng xu·∫•t">
              <span>ƒêƒÉng xu·∫•t</span>
              <i aria-hidden="true">‚á¶</i>
            </button>
          </form>
        </div>
            </header>
            <main class="app-content">
                <%- include('../partials/alerts') %>

<%- contentFor('content') %>
<div class="examination-page">
<div class="page-header">
  <h1 class="page-title">
    <i class="fas fa-clipboard-check"></i>
    C√¥ng t√°c kh·∫£o th√≠
  </h1>
  <div class="page-actions">
    <a href="/examination/create" class="btn btn-primary">
      <i class="fas fa-plus"></i>
      Th√™m ca thi
    </a>
  </div>
</div>

<%
  const statusCounts = (insights && insights.statusCounts) || {};
  const totalSessions = (insights && insights.totalSessions) || 0;
  const unassignedCount = (insights && insights.unassignedCount) || 0;
  const dueSoonCount = (insights && insights.gradingDueSoonCount) || 0;
  const overdueCount = (insights && insights.overdueGradingCount) || 0;
  const nextUpcoming = insights && insights.nextUpcoming;
  const overdueList = (alerts && alerts.overdueGrading) || [];
  const dueSoonList = (alerts && alerts.gradingDueSoon) || [];
  const unassignedList = (alerts && alerts.unassignedSessions) || [];
  const hasAlerts = overdueList.length || dueSoonList.length || unassignedList.length;
%>

<div class="insights-grid">
  <div class="insight-card insight-card--primary">
    <span class="insight-label">T·ªïng ca thi</span>
    <span class="insight-value"><%= totalSessions %></span>
    <span class="insight-subtext">Bao g·ªìm t·∫•t c·∫£ tr·∫°ng th√°i hi·ªán h√†nh</span>
  </div>
  <div class="insight-card">
    <span class="insight-label">ƒêang di·ªÖn ra</span>
    <span class="insight-value"><%= statusCounts.in_progress || 0 %></span>
    <span class="insight-subtext">Theo d√µi s√°t ti·∫øn ƒë·ªô ph√≤ng thi</span>
  </div>
  <div class="insight-card">
    <span class="insight-label">C·∫ßn ph√¢n c√¥ng</span>
    <span class="insight-value"><%= unassignedCount %></span>
    <span class="insight-subtext">Ch∆∞a c√≥ c√°n b·ªô ch·∫•m</span>
    <% if (unassignedCount > 0) { %>
      <span class="insight-delta insight-delta--warn"><i class="fas fa-user-clock"></i> ∆Øu ti√™n x·ª≠ l√Ω</span>
    <% } %>
  </div>
  <div class="insight-card">
    <span class="insight-label">C·∫£nh b√°o h·∫°n ch·∫•m</span>
    <span class="insight-value"><%= overdueCount %></span>
    <span class="insight-subtext">Qu√° h·∫°n: <%= overdueCount %> | S·∫Øp ƒë·∫øn h·∫°n: <%= dueSoonCount %></span>
    <% if (overdueCount === 0 && dueSoonCount > 0) { %>
      <span class="insight-delta"><i class="fas fa-hourglass-half"></i> C√≥ h·∫°n trong 7 ng√†y</span>
    <% } %>
    <% if (overdueCount > 0) { %>
      <span class="insight-delta insight-delta--warn"><i class="fas fa-triangle-exclamation"></i> C·∫ßn nh·∫Øc vi·ªác ngay</span>
    <% } %>
  </div>
</div>

<% if (nextUpcoming) { %>
  <div class="insight-highlight">
    <div>
      <span class="insight-label">Ca thi g·∫ßn nh·∫•t</span>
      <strong><i class="fas fa-calendar-day"></i> <%= nextUpcoming.name %></strong>
    </div>
    <div class="highlight-meta">
      <% if (nextUpcoming.date) { %>
        <% const examDate = new Date(nextUpcoming.date); %>
        <span><i class="fas fa-clock"></i> <%= examDate.toLocaleDateString('vi-VN') %> <%= nextUpcoming.time ? ('| ' + nextUpcoming.time.substring(0,5)) : '' %></span>
      <% } %>
      <% if (nextUpcoming.classCode) { %>
        <span><i class="fas fa-users"></i> L·ªõp <%= nextUpcoming.classCode %></span>
      <% } %>
      <span><i class="fas fa-info-circle"></i> <%= nextUpcoming.status === 'in_progress' ? 'ƒêang thi' : (nextUpcoming.status === 'completed' ? 'Ho√†n th√†nh' : 'ƒê√£ l√™n l·ªãch') %></span>
      <a class="btn btn-sm btn-outline-primary" href="/examination/<%= nextUpcoming.id %>">
        <i class="fas fa-arrow-right"></i> Xem chi ti·∫øt
      </a>
    </div>
  </div>
<% } %>

<% if (hasAlerts) { %>
  <section class="alert-section">
    <div class="alert-section__title"><i class="fas fa-exclamation-circle"></i> H·∫°ng m·ª•c c·∫ßn theo d√µi</div>
    <div class="alert-grid">
      <% if (overdueList.length) { %>
        <div class="alert-card">
          <div class="alert-card__header">
            <span><i class="fas fa-bell"></i> Qu√° h·∫°n ch·∫•m</span>
            <span class="badge bg-danger"><%= overdueList.length %></span>
          </div>
          <ul class="alert-list">
            <% overdueList.slice(0,3).forEach(item => { %>
              <li class="alert-item">
                <strong><%= item.exam_name || item.subject_name %></strong>
                <div class="alert-meta">
                  <% if (item.grading_deadline) { %>
                    <span><i class="fas fa-calendar-times"></i> <%= new Date(item.grading_deadline).toLocaleDateString('vi-VN') %></span>
                  <% } %>
                  <span><i class="fas fa-user"></i> <%= item.grader_name || item.grader_manual_name || 'Ch∆∞a ph√¢n c√¥ng' %></span>
                </div>
              </li>
            <% }) %>
          </ul>
        </div>
      <% } %>

      <% if (dueSoonList.length) { %>
        <div class="alert-card alert-card--warning">
          <div class="alert-card__header">
            <span><i class="fas fa-hourglass-half"></i> S·∫Øp ƒë·∫øn h·∫°n</span>
            <span class="badge bg-warning text-dark"><%= dueSoonList.length %></span>
          </div>
          <ul class="alert-list">
            <% dueSoonList.slice(0,3).forEach(item => { %>
              <li class="alert-item">
                <strong><%= item.exam_name || item.subject_name %></strong>
                <div class="alert-meta">
                  <% if (item.grading_deadline) { %>
                    <span><i class="fas fa-calendar-day"></i> <%= new Date(item.grading_deadline).toLocaleDateString('vi-VN') %></span>
                  <% } %>
                  <span><i class="fas fa-user"></i> <%= item.grader_name || item.grader_manual_name || 'Ch∆∞a ph√¢n c√¥ng' %></span>
                </div>
              </li>
            <% }) %>
          </ul>
        </div>
      <% } %>

      <% if (unassignedList.length) { %>
        <div class="alert-card alert-card--info">
          <div class="alert-card__header">
            <span><i class="fas fa-user-clock"></i> Ch∆∞a ph√¢n c√¥ng</span>
            <span class="badge bg-info text-dark"><%= unassignedCount %></span>
          </div>
          <ul class="alert-list">
            <% unassignedList.slice(0,4).forEach(item => { %>
              <li class="alert-item">
                <strong><%= item.exam_name || item.subject_name %></strong>
                <div class="alert-meta">
                  <% if (item.exam_date) { %>
                    <span><i class="fas fa-calendar"></i> <%= new Date(item.exam_date).toLocaleDateString('vi-VN') %></span>
                  <% } %>
                  <span><i class="fas fa-users"></i> L·ªõp <%= item.class_code || '-' %></span>
                </div>
              </li>
            <% }) %>
          </ul>
        </div>
      <% } %>
    </div>
  </section>
<% } %>

<!-- Filter Toolbar -->
<div class="filter-toolbar">
  <form method="GET" action="/examination" class="filter-form">
    <div class="filter-group">
      <label>K·ª≥ thi</label>
      <select name="period_id" class="form-control">
        <option value="">T·∫•t c·∫£</option>
        <% periods.forEach(period => { %>
          <option value="<%= period.id %>" <%= filters.period_id == period.id ? 'selected' : '' %>>
            <%= period.name %>
          </option>
        <% }) %>
      </select>
    </div>

    <div class="filter-group">
      <label>Tr·∫°ng th√°i</label>
      <select name="status" class="form-control">
        <option value="">T·∫•t c·∫£</option>
        <option value="scheduled" <%= filters.status === 'scheduled' ? 'selected' : '' %>>ƒê√£ l√™n l·ªãch</option>
        <option value="in_progress" <%= filters.status === 'in_progress' ? 'selected' : '' %>>ƒêang thi</option>
        <option value="completed" <%= filters.status === 'completed' ? 'selected' : '' %>>ƒê√£ ho√†n th√†nh</option>
      </select>
    </div>

    <div class="filter-group">
      <label>C√°n b·ªô ch·∫•m</label>
      <input type="text" name="grader" class="form-control" placeholder="Nh·∫≠p t√™n c√°n b·ªô ch·∫•m..." list="graderFilterList" value="<%= filters.grader || '' %>">
      <datalist id="graderFilterList">
        <% (graders || []).forEach(g => { %>
          <option value="<%= g.full_name %>"><%= g.full_name %> (<%= g.email %>)</option>
        <% }) %>
      </datalist>
    </div>

    <div class="filter-group flex-grow">
      <label>T√¨m ki·∫øm</label>
      <input type="text" name="search" class="form-control" 
             placeholder="T√¨m theo t√™n ca thi, m√¥n h·ªçc..." 
             value="<%= filters.search || '' %>">
    </div>

    <div class="filter-actions">
      <button type="submit" class="btn btn-primary">
        <i class="fas fa-search"></i> L·ªçc
      </button>
      <a href="/examination" class="btn btn-secondary">
        <i class="fas fa-times"></i> X√≥a l·ªçc
      </a>
    </div>
  </form>
</div>

<!-- Data Table -->
<div class="card">
  <div class="card-body">
    <%
      const statusConfig = {
        scheduled: { label: 'ƒê√£ l√™n l·ªãch', icon: 'fa-calendar-check', className: 'status-chip--scheduled' },
        in_progress: { label: 'ƒêang thi', icon: 'fa-wave-square', className: 'status-chip--progress' },
        completed: { label: 'Ho√†n th√†nh', icon: 'fa-circle-check', className: 'status-chip--completed' },
        offline: { label: 'Ngo·∫°i tuy·∫øn', icon: 'fa-plug-circle-xmark', className: 'status-chip--offline' },
        cancelled: { label: 'T·∫°m ho√£n', icon: 'fa-triangle-exclamation', className: 'status-chip--risk' },
        pending: { label: 'ƒêang c·∫≠p nh·∫≠t', icon: 'fa-ellipsis', className: '' },
        unknown: { label: 'ƒêang c·∫≠p nh·∫≠t', icon: 'fa-ellipsis', className: '' }
      };
    %>
    <div class="table-responsive">
      <table class="table table-hover">
        <thead>
          <tr>
            <th>T√™n ca thi</th>
            <th>Tr·∫°ng th√°i</th>
            <th>M√£ m√¥n</th>
            <th>L·ªõp</th>
            <th>M√¥n h·ªçc</th>
            <th class="text-center">SL SV</th>
            <th>C√°n b·ªô ch·∫•m 1</th>
            <th>C√°n b·ªô ch·∫•m 2</th>
            <th>H·∫°n ch·∫•m</th>
            <th>Ng√†y thi</th>
            <th>Link</th>
            <th class="text-center">Thao t√°c</th>
          </tr>
        </thead>
        <tbody>
          <% if (sessions.length === 0) { %>
            <tr>
              <td colspan="12" class="text-center text-muted py-5">
                <i class="fas fa-inbox fa-3x mb-3"></i>
                <p>Ch∆∞a c√≥ ca thi n√†o</p>
              </td>
            </tr>
          <% } else { %>
            <% sessions.forEach(session => { %>
              <tr>
                <td>
                  <a href="/examination/<%= session.id %>">
                    <%= session.exam_name || session.subject_name %>
                  </a>
                </td>
                <td>
                  <%
                    const config = statusConfig[session.status] || statusConfig.unknown;
                    const statusIcon = config.icon || 'fa-ellipsis';
                    const statusClass = config.className ? ('status-chip ' + config.className) : 'status-chip';
                  %>
                  <span class="<%= statusClass %>">
                    <i class="fas <%= statusIcon %>"></i>
                    <%= config.label %>
                  </span>
                </td>
                <td><%= session.subject_code || '-' %></td>
                <td><%= session.class_code || '-' %></td>
                <td><%= session.subject_name || '-' %></td>
                <td class="text-center"><%= session.student_count %></td>
                <td>
                  <% if (session.grader_name) { %>
                    <span class="text-primary">
                      <i class="fas fa-user-check"></i> <%= session.grader_name %>
                    </span>
                  <% } else if (session.grader_manual_name) { %>
                    <span class="manual-grader-text">
                      <i class="fas fa-user-pen"></i> <%= session.grader_manual_name %>
                    </span>
                  <% } else { %>
                    <span class="text-muted">
                      <i class="fas fa-user-times"></i> Ch∆∞a ph√¢n c√¥ng
                    </span>
                  <% } %>
                </td>
                <td>
                  <% if (session.grader2_name) { %>
                    <span class="text-primary">
                      <i class="fas fa-user-check"></i> <%= session.grader2_name %>
                    </span>
                  <% } else if (session.grader2_manual_name) { %>
                    <span class="manual-grader-text">
                      <i class="fas fa-user-pen"></i> <%= session.grader2_manual_name %>
                    </span>
                  <% } else { %>
                    <span class="text-muted">
                      <i class="fas fa-user-times"></i> Ch∆∞a ph√¢n c√¥ng
                    </span>
                  <% } %>
                </td>
                <td>
                  <% if (session.grading_deadline) { %>
                    <% 
                      const deadline = new Date(session.grading_deadline);
                      const today = new Date();
                      const daysLeft = session.days_until_deadline;
                      let badgeClass = 'badge-secondary';
                      if (daysLeft < 0) badgeClass = 'badge-danger';
                      else if (daysLeft <= 3) badgeClass = 'badge-warning';
                      else if (daysLeft <= 7) badgeClass = 'badge-info';
                    %>
                    <span class="badge <%= badgeClass %>">
                      <%= deadline.toLocaleDateString('vi-VN') %>
                      <% if (daysLeft >= 0) { %>
                        <small>(c√≤n <%= daysLeft %> ng√†y)</small>
                      <% } else { %>
                        <small>(qu√° h·∫°n <%= Math.abs(daysLeft) %> ng√†y)</small>
                      <% } %>
                    </span>
                  <% } else { %>
                    <span class="text-muted">-</span>
                  <% } %>
                </td>
                <td>
                  <% if (session.exam_date) { %>
                    <%= new Date(session.exam_date).toLocaleDateString('vi-VN') %>
                    <% if (session.exam_time) { %>
                      <small class="text-muted d-block">
                        <%= session.exam_time.substring(0, 5) %>
                      </small>
                    <% } %>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td>
                  <% if (session.link || (session.file_count && session.file_count > 0)) { %>
                    <div class="link-cell">
                      <% if (session.file_count && session.file_count > 0) { %>
      <button class="btn btn-sm btn-outline-primary" 
        data-action="open-session"
        data-session-id="<%= session.id %>"
        title="Xem file ƒë√≠nh k√®m">
                          <i class="fas fa-paperclip"></i>
                          <span class="badge bg-primary"><%= session.file_count %></span>
                        </button>
                      <% } %>
                      <% if (session.link) { %>
                        <a href="<%= session.link %>" target="_blank" class="btn btn-sm btn-link">
                          <i class="fas fa-external-link-alt"></i>
                        </a>
                      <% } %>
                    </div>
                  <% } else { %>
        <button class="btn btn-sm btn-outline-secondary" 
          data-action="open-session"
          data-session-id="<%= session.id %>"
          title="Upload file">
                      <i class="fas fa-upload"></i>
                    </button>
                  <% } %>
                </td>
                <td class="text-center">
                  <div class="btn-group">
        <button class="btn btn-sm btn-outline-primary" 
          data-action="open-session"
          data-session-id="<%= session.id %>"
          title="S·ª≠a">
                      <i class="fas fa-edit"></i>
                    </button>
                    <% if (session.grader_id && session.grading_deadline && !session.reminder_sent) { %>
                    <button class="btn btn-sm btn-outline-warning"
                            data-action="send-reminder"
                            data-session-id="<%= session.id %>"
                            title="Nh·∫Øc vi·ªác">
                      <i class="fas fa-bell"></i>
                    </button>
                    <% } else if (session.reminder_sent) { %>
                    <button class="btn btn-sm btn-outline-secondary"
                            title="ƒê√£ nh·∫Øc vi·ªác" disabled>
                      <i class="fas fa-bell-slash"></i>
                    </button>
                    <% } %>
                    <button class="btn btn-sm btn-outline-danger"
                            data-action="delete-session"
                            data-session-id="<%= session.id %>"
                            title="X√≥a">
                      <i class="fas fa-trash"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-success"
                            data-action="backup-session"
                            data-session-id="<%= session.id %>"
                            title="Sao l∆∞u">
                      <i class="fas fa-save"></i>
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
async function deleteSession(id) {
  if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a ca thi n√†y?')) return;
  
  try {
    const response = await fetch(`/examination/${id}`, {
      method: 'DELETE',
      headers: { 'Content-Type': 'application/json' }
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('X√≥a th√†nh c√¥ng!');
      location.reload();
    } else {
      alert('L·ªói: ' + data.message);
    }
  } catch (error) {
    alert('L·ªói khi x√≥a ca thi');
    console.error(error);
  }
}

async function sendReminder(id) {
  if (!confirm('G·ª≠i nh·∫Øc vi·ªác ƒë·∫øn c√°n b·ªô ch·∫•m thi?')) return;
  
  try {
    const response = await fetch(`/examination/${id}/reminder`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    });
    
    const data = await response.json();
    
    if (data.success) {
      alert('ƒê√£ g·ª≠i nh·∫Øc vi·ªác th√†nh c√¥ng!');
      location.reload();
    } else {
      alert('L·ªói: ' + data.message);
    }
  } catch (error) {
    alert('L·ªói khi g·ª≠i nh·∫Øc vi·ªác');
    console.error(error);
  }
}

async function backupSession(id) {
  alert('Ch·ª©c nƒÉng sao l∆∞u ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn');
}

document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('[data-action="delete-session"]').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.sessionId;
      if (id) {
        deleteSession(id);
      }
    });
  });

  document.querySelectorAll('[data-action="send-reminder"]').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.sessionId;
      if (id) {
        sendReminder(id);
      }
    });
  });

  document.querySelectorAll('[data-action="backup-session"]').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.sessionId;
      if (id) {
        backupSession(id);
      }
    });
  });

  document.querySelectorAll('[data-action="open-session"]').forEach(btn => {
    btn.addEventListener('click', () => {
      const id = btn.dataset.sessionId;
      if (id && typeof examinationModalManager !== 'undefined') {
        examinationModalManager.open(id);
      }
    });
  });
});
</script>
</div>

            </main>
        </div>
    </div>

    <%- include('../partials/footer') %>
    
    <script src="/js/app.js"></script>
    <script src="/js/examination-enhanced.js"></script>
</body>
</html>

